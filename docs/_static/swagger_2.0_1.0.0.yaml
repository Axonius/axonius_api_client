swagger: '2.0'
info:
  title: Axonius REST API
  description: API for Axonius
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: support@axonius.com
    name: Axonius
    url: 'https://axonius.com'
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: "2.0_1.0.0"
basePath: /api/V1
securityDefinitions:
  api_key:
    description: Get this from account settings in Axonius
    in: header
    name: api-key
    type: apiKey
  api_secret:
    description: Get this from account settings in Axonius
    in: header
    name: api-secret
    type: apiKey
security:
  - api_key: []
    api_secret: []
tags:
  - name: Devices
    description: Endpoints for device assets
  - name: Users
    description: Endpoints for user assets
paths:
  /users:
    post:
      tags:
        - Users
      summary: >-
        Get user assets using paging with optional fields (columns in GUI) and
        filter (query in GUI)
      operationId: AssetsUserOperation
      parameters:
        - in: body
          name: RequestAssets
          schema:
            $ref: '#/definitions/RequestAssets'
      responses:
        '200':
          $ref: '#/responses/AssetsResponse'
        '400':
          $ref: '#/responses/ErrorMalformedQueryResponse'
        '401':
          $ref: '#/responses/ErrorUnauthorizedResponse'
  '/users/{id}':
    get:
      tags:
        - Users
      summary: Get all adapter keys and values for a user by internal_axon_id
      operationId: AssetByIdUserOperation
      parameters:
        - $ref: '#/parameters/asset_id_parameter'
      responses:
        '200':
          $ref: '#/responses/AssetByIdResponse'
        '401':
          $ref: '#/responses/ErrorUnauthorizedResponse'
        '404':
          $ref: '#/responses/ErrorNotFoundByIdResponse'
  /users/count:
    post:
      tags:
        - Users
      summary: Get count of user assets matching a filter (query in GUI)
      operationId: AssetCountUserOperation
      parameters:
        - in: body
          name: RequestAssetCount
          schema:
            $ref: '#/definitions/RequestAssetCount'
      responses:
        '200':
          $ref: '#/responses/AssetCountResponse'
        '400':
          $ref: '#/responses/ErrorMalformedQueryResponse'
        '401':
          $ref: '#/responses/ErrorUnauthorizedResponse'
  /users/fields:
    get:
      tags:
        - Users
      summary: Get all fields defined for user assets
      operationId: AssetFieldsUserOperation
      responses:
        '200':
          $ref: '#/responses/AssetFieldsResponse'
        '401':
          $ref: '#/responses/ErrorUnauthorizedResponse'
  /users/labels:
    get:
      tags:
        - Users
      summary: Get all labels (tags in GUI) assigned to user assets
      operationId: AssetLabelUserAddOperation
      responses:
        '200':
          $ref: '#/responses/AssetLabelGetResponse'
        '401':
          $ref: '#/responses/ErrorUnauthorizedResponse'
    post:
      tags:
        - Users
      summary: Add labels (tags in GUI) to user assets
      operationId: AssetLabelUserGetOperation
      parameters:
        - in: body
          name: RequestAssetLabelAddRemove
          schema:
            $ref: '#/definitions/RequestAssetLabelAddRemove'
      responses:
        '200':
          $ref: '#/responses/AssetLabelAddRemoveResponse'
        '400':
          $ref: '#/responses/ErrorMalformedLabelAddRemoveResponse'
        '401':
          $ref: '#/responses/ErrorUnauthorizedResponse'
    delete:
      tags:
        - Users
      summary: Remove labels (tags in GUI) from user assets
      operationId: AssetLabelUserRemoveOperation
      parameters:
        - in: body
          name: RequestAssetLabelAddRemove
          schema:
            $ref: '#/definitions/RequestAssetLabelAddRemove'
      responses:
        '200':
          $ref: '#/responses/AssetLabelAddRemoveResponse'
        '400':
          $ref: '#/responses/ErrorMalformedLabelAddRemoveResponse'
        '401':
          $ref: '#/responses/ErrorUnauthorizedResponse'
  /devices:
    post:
      tags:
        - Devices
      summary: >-
        Get device assets using paging with optional fields (columns in GUI) and
        filter (query in GUI)
      operationId: AssetsDeviceOperation
      parameters:
        - in: body
          name: RequestAssets
          schema:
            $ref: '#/definitions/RequestAssets'
      responses:
        '200':
          $ref: '#/responses/AssetsResponse'
        '400':
          $ref: '#/responses/ErrorMalformedQueryResponse'
        '401':
          $ref: '#/responses/ErrorUnauthorizedResponse'
  '/devices/{id}':
    get:
      tags:
        - Devices
      summary: Get all adapter keys and values for a device by internal_axon_id
      operationId: AssetByIdDeviceOperation
      parameters:
        - $ref: '#/parameters/asset_id_parameter'
      responses:
        '200':
          $ref: '#/responses/AssetByIdResponse'
        '401':
          $ref: '#/responses/ErrorUnauthorizedResponse'
        '404':
          $ref: '#/responses/ErrorNotFoundByIdResponse'
  /devices/count:
    post:
      tags:
        - Devices
      summary: Get count of device assets using optional filter (query in GUI)
      operationId: AssetCountDeviceOperation
      parameters:
        - in: body
          name: RequestAssetCount
          schema:
            $ref: '#/definitions/RequestAssetCount'
      responses:
        '200':
          $ref: '#/responses/AssetCountResponse'
        '400':
          $ref: '#/responses/ErrorMalformedQueryResponse'
        '401':
          $ref: '#/responses/ErrorUnauthorizedResponse'
  /devices/fields:
    get:
      tags:
        - Devices
      summary: Get all fields defined for device assets
      operationId: AssetFieldsDeviceOperation
      responses:
        '200':
          $ref: '#/responses/AssetFieldsResponse'
        '401':
          $ref: '#/responses/ErrorUnauthorizedResponse'
  /devices/labels:
    get:
      tags:
        - Devices
      summary: Get all labels (tags in GUI) assigned to device assets
      operationId: AssetLabelDeviceGetOperation
      responses:
        '200':
          $ref: '#/responses/AssetLabelGetResponse'
        '401':
          $ref: '#/responses/ErrorUnauthorizedResponse'
    post:
      tags:
        - Devices
      summary: Add labels (tags in GUI) to device assets
      operationId: AssetLabelDeviceAddOperation
      parameters:
        - in: body
          name: RequestAssetLabelAddRemove
          schema:
            $ref: '#/definitions/RequestAssetLabelAddRemove'
      responses:
        '200':
          $ref: '#/responses/AssetLabelAddRemoveResponse'
        '400':
          $ref: '#/responses/ErrorMalformedLabelAddRemoveResponse'
        '401':
          $ref: '#/responses/ErrorUnauthorizedResponse'
    delete:
      tags:
        - Devices
      summary: Remove labels (tags in GUI) from device assets
      operationId: AssetLabelDeviceRemoveOperation
      parameters:
        - in: body
          name: RequestAssetLabelAddRemove
          schema:
            $ref: '#/definitions/RequestAssetLabelAddRemove'
      responses:
        '200':
          $ref: '#/responses/AssetLabelAddRemoveResponse'
        '400':
          $ref: '#/responses/ErrorMalformedLabelAddRemoveResponse'
        '401':
          $ref: '#/responses/ErrorUnauthorizedResponse'

parameters:
  node_id_parameter:
    name: node_id
    in: path
    description: UUID of a specific node
    type: string
    required: true
  config_name_parameter:
    name: config_name
    in: path
    description: >-
      name of advanced configuration settings to get/set. Use AdapterBase for
      generic advanced settings available to every adapter. Use NameAdapter
      (replace Name with title cased name of Adapter) for adapter specific
      advanced settings, if the adapter has any.
    type: string
    required: true
  adapter_unique_name_parameter:
    name: adapter_unique_name
    in: path
    description: >-
      unique internal name of adapter (aka what designates an adapter on a
      specific node)
    type: string
    required: true
  adapter_name_parameter:
    name: adapter_name
    in: path
    description: internal name of adapter
    type: string
    required: true
  asset_id_parameter:
    name: id
    in: path
    description: internal_axon_id of an asset
    type: string
    required: true
  saved_query_filter_parameter:
    name: filter
    in: query
    description: |
      Filter to use when searching for saved queries

      * Regex example `name = regex("example", "i")`
      * Equals example `name == "example"`
      * Not Equals Example `not name == "example"`
    type: string
    required: false
  page_skip_parameter:
    name: skip
    in: query
    description: How many rows to skip (0 to start at first row)
    required: true
    minimum: 0
    type: integer
  page_limit_parameter:
    name: limit
    in: query
    description: How many rows to return in a page
    required: true
    maximum: 2000
    minimum: 1
    type: integer
definitions:
  RequestAssetLabelAddRemove:
    type: object
    required:
      - entities
      - labels
    properties:
      entities:
        type: object
        required:
          - ids
        properties:
          ids:
            type: array
            items:
              type: string
            description: internal_axon_id of assets to add labels (tags) to
            example:
              - 5e62e88deb81e7d909558444
              - 5e62e88deb81e7d90955853d
      labels:
        type: array
        description: labels (tags) to add to entities.ids
        items:
          type: string
  RequestAssetCount:
    type: object
    properties:
      filter:
        description: >-
          Filter built using Query Wizard to use when counting assets. If not
          supplied, will count all assets
        example: (specific_data.data.last_seen >= date("NOW - 1d"))
        type: string
  RequestAssets:
    required:
      - limit
      - skip
    type: object
    properties:
      limit:
        description: How many rows to return in a page
        maximum: 2000
        minimum: 1
        type: integer
      skip:
        description: How many rows to skip (0 to start at first row)
        minimum: 0
        type: integer
      filter:
        description: >-
          Filter built using Query Wizard to use when searching for assets. If
          not supplied, will return all assets
        example: (specific_data.data.last_seen >= date("NOW - 1d"))
        type: string
      fields:
        description: >-
          Fields to include in asssets that are returned. If not supplied,
          will include very minimal information
        example: >-
          labels,adapters,specific_data.data.id,specific_data.data.fetch_time,specific_data.data.hostname,specific_data.data.network_interfaces.ips
        type: string
        format: csv
  ResponseError:
    required:
      - message
      - status
    type: object
    properties:
      additional_data:
        type: string
      message:
        type: string
      status:
        type: string
      tpe:
        type: string
  ResponseAssetPage:
    type: object
    properties:
      assets:
        type: array
        items:
          $ref: '#/definitions/ObjectAsset'
      page:
        $ref: '#/definitions/ObjectPageInfo'
    required:
      - assets
      - page
  ResponseAssetFields:
    type: object
    properties:
      generic:
        type: array
        items:
          $ref: '#/definitions/ObjectField'
      schema:
        type: object
        properties:
          generic:
            type: array
            items:
              $ref: '#/definitions/ObjectField'
          specific:
            type: object
            description: keyed on adapter name for every configured adapter
            properties:
              adapter_name:
                type: array
                items:
                  $ref: '#/definitions/ObjectField'
      specific:
        type: object
        description: keyed on adapter name for every configured adapter
        properties:
          adapter_name:
            type: array
            items:
              $ref: '#/definitions/ObjectField'
    description: This returns variable information based on the configured adapters
  ResponseArrayLabels:
    type: array
    items:
      type: string
  ObjectPageInfo:
    type: object
    properties:
      number:
        type: integer
        description: current page number being returned
      size:
        type: integer
        description: number of assets returned in this page
      totalPages:
        type: integer
        description: >-
          total number of pages based on totalResources divided by supplied
          limit
      totalResources:
        type: integer
        description: total number of assets that match the supplied filter
  ObjectField:
    type: object
    properties:
      name:
        type: string
        example: specific_data.data.hostname
      title:
        type: string
        example: Host Name
      type:
        type: string
        example: string
        enum:
          - array
          - bool
          - integer
          - number
          - string
      branched:
        type: boolean
      description:
        type: string
      sort:
        type: boolean
      dynamic:
        type: boolean
      enum:
        type: array
        items:
          type: string
      format:
        type: string
        example: version
        enum:
          - date-time
          - discrete
          - image
          - ip
          - subnet
          - table
          - version
      unique:
        type: boolean
      items:
        $ref: '#/definitions/ObjectFieldItems'
    required:
      - name
      - title
      - type
  ObjectFieldItems:
    type: object
    properties:
      name:
        type: string
        example: specific_data.data.hostname
      title:
        type: string
        example: Host Name
      type:
        $ref: '#/definitions/StringCommonTypes'
      branched:
        type: boolean
      description:
        type: string
      sort:
        type: boolean
      dynamic:
        type: boolean
      enum:
        type: array
        items:
          type: string
      format:
        $ref: '#/definitions/StringCommonFormats'
      unique:
        type: boolean
      items:
        $ref: '#/definitions/ArrayFieldItems'
    required:
      - type
  ArrayFieldItems:
    type: array
    items:
      type: object
      properties:
        name:
          type: string
          example: specific_data.data.hostname
        title:
          type: string
          example: Host Name
        type:
          $ref: '#/definitions/StringCommonTypes'
        branched:
          type: boolean
        description:
          type: string
        sort:
          type: boolean
        dynamic:
          type: boolean
        enum:
          type: array
          items:
            type: string
        format:
          $ref: '#/definitions/StringCommonFormats'
        unique:
          type: boolean
        items:
          $ref: '#/definitions/ObjectFieldItems'
      required:
        - name
        - title
        - type
  StringCommonTypes:
    type: string
    example: string
    enum:
      - array
      - bool
      - integer
      - number
      - string
  StringCommonFormats:
    type: string
    example: version
    enum:
      - date-time
      - ip
      - logo
      - subnet
      - tag
      - version
  ObjectAsset:
    type: object
    properties:
      adapter_list_length:
        type: integer
        minimum: 1
        example: 9
      internal_axon_id:
        type: string
        example: 48349f81c2f12d74ab1fc79d483a92b5
      adapters:
        type: array
        items:
          type: string
        example:
          - active_directory_adapter
          - aws_adapter
          - deep_security_adapter
          - crowd_strike_adapter
          - solarwinds_orion_adapter
          - tanium_adapter
          - tanium_asset_adapter
          - tanium_discover_adapter
          - preempt_adapter
    description: >-
      This returns keys based on the fields (columns in GUI) supplied in the
      original request
    required:
      - adapters
      - internal_axon_id
      - adapter_list_length
responses:
  EmptyResponse:
    description: When no response is returned
  AssetCountResponse:
    description: >-
      Response from getting count of device or user assets with optional
      filter (query in GUI)
    schema:
      type: integer
      description: Count of assets matching query
      example: 323
  AssetsResponse:
    description: >-
      Response from getting device or user assets with optional filter (query
      in GUI) and fields (columns in GUI) using paging
    schema:
      $ref: '#/definitions/ResponseAssetPage'
  AssetByIdResponse:
    description: Response from getting a device or user asset by internal_axon_id
    schema:
      $ref: '#/definitions/ObjectAsset'
  AssetFieldsResponse:
    description: Response from getting fields for device or user assets
    schema:
      $ref: '#/definitions/ResponseAssetFields'
  AssetLabelGetResponse:
    description: >-
      Response from getting all known labels (tags in GUI) for device or user
      assets
    schema:
      $ref: '#/definitions/ResponseArrayLabels'
  AssetLabelAddRemoveResponse:
    description: >-
      Response from adding or removing labels (tags in GUI) to device or user
      assets
    schema:
      type: integer
      description: Number of assets labels (tags in GUI) were added to
  ErrorUnauthorizedResponse:
    description: errors that come back with 401 codes
    schema:
      $ref: '#/definitions/ResponseError'
  ErrorMalformedLabelAddRemoveResponse:
    description: Error when request is missing entities or labels properties
    schema:
      $ref: '#/definitions/ResponseError'
  ErrorMalformedQueryResponse:
    description: Error when mongo query is malformed
    schema:
      $ref: '#/definitions/ResponseError'
  ErrorNotFoundByIdResponse:
    description: Error when asset ID is not found
    schema:
      $ref: '#/definitions/ResponseError'

externalDocs:
  description: Axonius API Client in Python
  url: 'https://axonius-api-client.readthedocs.io/en/latest/'
